{"ast":null,"code":"import { useState, useEffect } from \"react\";\nconst baseUrl = process.env.REACT_APP_API_BASE_URL;\nexport default function useFetch(url) {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function init() {\n      try {\n        const response = await fetch(baseUrl + url);\n\n        if (response.ok) {\n          const json = await response.json();\n          setData(json);\n        } else {\n          throw response;\n        }\n      } catch (e) {\n        setError(e);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    init();\n  }, [url]); //depende data\n\n  return {\n    data,\n    error,\n    loading\n  };\n}","map":{"version":3,"sources":["/Users/francispassantino/Documents/code/Pluralsight/reactState/src/services/useFetch.js"],"names":["useState","useEffect","baseUrl","process","env","REACT_APP_API_BASE_URL","useFetch","url","data","setData","error","setError","loading","setLoading","init","response","fetch","ok","json","e"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAA5B;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,IAAf,GAAsB;AACpB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACd,OAAO,GAAGK,GAAX,CAA5B;;AACA,YAAIQ,QAAQ,CAACE,EAAb,EAAiB;AACf,gBAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAnB;AACAT,UAAAA,OAAO,CAACS,IAAD,CAAP;AACD,SAHD,MAGO;AACL,gBAAMH,QAAN;AACD;AACF,OARD,CAQE,OAAOI,CAAP,EAAU;AACVR,QAAAA,QAAQ,CAACQ,CAAD,CAAR;AACD,OAVD,SAUU;AACRN,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;;AACDC,IAAAA,IAAI;AACL,GAjBQ,EAiBN,CAACP,GAAD,CAjBM,CAAT,CALoC,CAsBzB;;AAGX,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,KAAR;AAAeE,IAAAA;AAAf,GAAP;AACD","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst baseUrl = process.env.REACT_APP_API_BASE_URL;\n\nexport default function useFetch(url) { \n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function init() {\n      try {\n        const response = await fetch(baseUrl + url);\n        if (response.ok) {\n          const json = await response.json();\n          setData(json);\n        } else {\n          throw response;\n        }\n      } catch (e) {\n        setError(e);\n      } finally {\n        setLoading(false);\n      }\n    }\n    init();\n  }, [url]); //depende data\n\n\n  return { data, error, loading };\n}\n"]},"metadata":{},"sourceType":"module"}