{"ast":null,"code":"var _jsxFileName = \"/Users/francispassantino/Documents/code/Pluralsight/reactState/src/Products.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport useFetch from \"./services/useFetch\";\nimport Spinner from './Spinner';\nimport { useParams } from 'react-router-dom';\nimport PageNotFound from \"./PageNotFound\";\nexport default function Products() {\n  const [size, setSize] = useState(\"\");\n  const {\n    category\n  } = useParams();\n  const {\n    data: products,\n    loading,\n    error\n  } = useFetch(\"products?category=\" + category);\n\n  function renderProduct(p) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: p.id,\n      className: \"product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `/images/${p.image}`,\n      alt: p.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, p.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, \"$\", p.price)));\n  }\n\n  const filteredProducts = size ? products.filter(p => p.skus.find(s => s.size === parseInt(size))) : products;\n  if (error) throw error;\n  if (loading) return /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    id: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Filter by Size:\"), \" \", /*#__PURE__*/React.createElement(\"select\", {\n    id: \"size\",\n    value: size,\n    onChange: e => {\n      setSize(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"All sizes\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"7\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"8\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"9\"))), size && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \" found \", filteredProducts.length, \" items \"), /*#__PURE__*/React.createElement(\"section\", {\n    id: \"products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \" \", filteredProducts === null || filteredProducts === void 0 ? void 0 : filteredProducts.map(renderProduct)));\n}","map":{"version":3,"sources":["/Users/francispassantino/Documents/code/Pluralsight/reactState/src/Products.jsx"],"names":["React","useState","useEffect","useFetch","Spinner","useParams","PageNotFound","Products","size","setSize","category","data","products","loading","error","renderProduct","p","id","image","name","price","filteredProducts","filter","skus","find","s","parseInt","e","target","value","length","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport useFetch from \"./services/useFetch\";\nimport Spinner from './Spinner';\nimport { useParams } from 'react-router-dom';\nimport PageNotFound from \"./PageNotFound\";\n\n\n\nexport default function Products() {\n  const [size, setSize] = useState(\"\");\n  const { category } = useParams();\n\n  const {data: products, loading, error} = useFetch(\"products?category=\" + category);\n\n  function renderProduct(p) {\n    return (\n      <div key={p.id} className=\"product\">\n        <a href=\"/\">\n          <img src={`/images/${p.image}`} alt={p.name} />\n          <h3>{p.name}</h3>\n          <p>${p.price}</p>\n        </a>\n      </div>\n    );\n  }\n\n  const filteredProducts = size \n    ? products.filter((p) => p.skus.find((s) => s.size === parseInt(size))) \n    : products; \n\n    if (error) throw error;\n    if (loading) return <Spinner/>\n    \n\n  return (\n    <>\n  \n          <section id=\"filters\">\n            <label htmlFor=\"size\">Filter by Size:</label>{\" \"}\n            <select \n              id=\"size\"\n              value={size}\n              onChange={(e) => {\n                setSize(e.target.value)\n              }} >\n              <option value=\"\">All sizes</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n            </select>\n          </section>\n          { size && <h2> found {filteredProducts.length} items </h2>}\n          <section id=\"products\"> {filteredProducts?.map(renderProduct)}\n          </section>\n\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}